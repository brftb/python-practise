# -*- coding: utf-8 -*-
"""Untitled1-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bifXAHtTFhmtzvG3C9Cm17LNazntOaZl
"""

# 変数
h = 171
h

w = 57
bmi = w / (h/100)**2
bmi

# 関数
def calcBmi(h, w):
  return w / (h/100)**2
calcBmi(171,57)

# 体感温度を求める関数
# param(温度,湿度)
def felt_air_temperature(temperature, humidity):
  return temperature - 1/2.3 * (temperature-10) * (0.8 - humidity/100)
felt_air_temperature(28,50)

# f(x)=ax^2+bx+c=0の解を求める関数
import math
def quadratic(a, b, c):
  return (-b+math.sqrt(b**2-4*a*c)) / 2*a
quadratic(1,6,9)

# ヘロンの公式を用いて三角形の面積を求める関数
import math
def heron(a, b, c):
  s = (a+b+c)/2
  return math.sqrt(s*(s-a)*(s-b)*(s-c))
heron(3,4,5)

# ローカル変数とprint
s = 100
import math
def heron(a, b, c):
  s = (a+b+c)/2
  print("the local value 's' is ", s)
  print("answer is ", math.sqrt(s*(s-a)*(s-b)*(s-c)))
  return math.sqrt(s*(s-a)*(s-b)*(s-c))
heron(5,12,13) # 表示されない
print("groval 's' is " , s)

import math
def qe_disk(a, b, c):
  return math.sqrt(b**2-4*a*c)
assert qe_disk(1,-2,1) == 0
# assert：True出ない時に例外を投げる
# 想定通りの動作をしているか簡単にチェックできる